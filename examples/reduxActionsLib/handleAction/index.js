//////////////////////////////////////////////////////////////////////////////////
/// Example using createAction
//////////////////////////////////////////////////////////////////////////////////

console.log('%cPlease play with these functions multiply, increment, decrement and setError in the console', 'font-size: 30px; color: red');
/* eslint-disable */

///////////////////////////////////////////////////////
/// Action Types
///////////////////////////////////////////////////////
const INC = 'INC';
const DEC = 'DEC';
const MULTIPLY = 'MULTIPLY';
const SET_ERROR = 'SET_ERROR';

///////////////////////////////////
/// counter.js copy past
///////////////////////////////////

var initialState = {
  counter: 0,
  error: null
};


///////////////////////////////////////////////////////
/// Action Creator
///////////////////////////////////////////////////////

const increment = ReduxActions.createAction(INC);

///////////////////////////////////////////////////////
/// Reducer
///////////////////////////////////////////////////////

var reducer = ReduxActions.handleAction(increment, {
  next(state, action) {
    return Object.assign({}, state, {
        counter: state.counter + 1
      });
  },
  throw(state, action) {}
}, {counter: 0});

///////////////////////////////////////////////////////
/// IGNORE THIS PART!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
///////////////////////////////////////////////////////
const composeEnhancers = typeof window === 'object' &&
window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?
window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
  // Specify extensionâ€™s options like name, actionsBlacklist, actionsCreators, serialize...
}) : compose;

const enhancer = composeEnhancers(
  // other store enhancers if any
);
///////////////////////////////////////////////////////
/// END IGNORE THIS PART!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
///////////////////////////////////////////////////////



///////////////////////////////////////////////////////
/// Creating store
///////////////////////////////////////////////////////
var store = Redux.createStore(reducer, initialState, enhancer);

///////////////////////////////////////////////////////
/// UI view framework
///////////////////////////////////////////////////////
function updateView() {
  document.getElementById('counter').innerText = store.getState().counter;
  document.getElementById('error').innerText = store.getState().error;
}
///////////////////////////////////////////////////////
/// subscribe = every time the store will update it will update updateView function
///////////////////////////////////////////////////////
store.subscribe(updateView);

///////////////////////////////////////////////////////
/// dispatch = send action using action creator
///////////////////////////////////////////////////////
document.getElementById('inc').onclick = function() {
  store.dispatch(increment());
}

///////////////////////////////////////////////////////
/// render
///////////////////////////////////////////////////////
updateView();
